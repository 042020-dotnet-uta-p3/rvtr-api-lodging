// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RVTR.Lodging.DataContext;

namespace RVTR.Lodging.DataContext.Migrations
{
    [DbContext(typeof(LodgingContext))]
    [Migration("20200616181738_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.AddressModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("StateProvince")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("AddressModel");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.BathroomModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Fixture")
                        .HasColumnType("double precision");

                    b.Property<int?>("RentalUnitModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RentalUnitModelId");

                    b.ToTable("BathroomModel");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.BedroomModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BedType")
                        .HasColumnType("text");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int?>("RentalUnitModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RentalUnitModelId");

                    b.ToTable("BedroomModel");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.ImageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<int?>("RentalUnitModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RentalUnitModelId");

                    b.ToTable("ImageModel");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.LocationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Latitude")
                        .HasColumnType("text");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<string>("Longitude")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LocationModel");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.LodgingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Lodgings");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.RentalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("LodgingId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LodgingId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.RentalUnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Occupancy")
                        .HasColumnType("integer");

                    b.Property<int?>("RentalId")
                        .HasColumnType("integer");

                    b.Property<string>("RentalUnitType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RentalId")
                        .IsUnique();

                    b.ToTable("RentalUnitModel");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.ReviewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LodgingId")
                        .HasColumnType("integer");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LodgingId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.AddressModel", b =>
                {
                    b.HasOne("RVTR.Lodging.ObjectModel.Models.LocationModel", "Location")
                        .WithOne("Address")
                        .HasForeignKey("RVTR.Lodging.ObjectModel.Models.AddressModel", "LocationId");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.BathroomModel", b =>
                {
                    b.HasOne("RVTR.Lodging.ObjectModel.Models.RentalUnitModel", null)
                        .WithMany("Bathrooms")
                        .HasForeignKey("RentalUnitModelId");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.BedroomModel", b =>
                {
                    b.HasOne("RVTR.Lodging.ObjectModel.Models.RentalUnitModel", null)
                        .WithMany("Bedrooms")
                        .HasForeignKey("RentalUnitModelId");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.ImageModel", b =>
                {
                    b.HasOne("RVTR.Lodging.ObjectModel.Models.RentalUnitModel", null)
                        .WithMany("Images")
                        .HasForeignKey("RentalUnitModelId");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.LodgingModel", b =>
                {
                    b.HasOne("RVTR.Lodging.ObjectModel.Models.LocationModel", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.RentalModel", b =>
                {
                    b.HasOne("RVTR.Lodging.ObjectModel.Models.LodgingModel", "Lodging")
                        .WithMany("Rentals")
                        .HasForeignKey("LodgingId");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.RentalUnitModel", b =>
                {
                    b.HasOne("RVTR.Lodging.ObjectModel.Models.RentalModel", "Rental")
                        .WithOne("RentalUnit")
                        .HasForeignKey("RVTR.Lodging.ObjectModel.Models.RentalUnitModel", "RentalId");
                });

            modelBuilder.Entity("RVTR.Lodging.ObjectModel.Models.ReviewModel", b =>
                {
                    b.HasOne("RVTR.Lodging.ObjectModel.Models.LodgingModel", "Lodging")
                        .WithMany("Reviews")
                        .HasForeignKey("LodgingId");
                });
#pragma warning restore 612, 618
        }
    }
}
